# Generated by Django 5.1.1 on 2024-11-07 16:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArtType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('art_type_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BookingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnote_number', models.CharField(db_index=True, editable=False, max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking_type', models.CharField(choices=[('sundry', 'Sundry'), ('other', 'Other')], default='sundry', max_length=50)),
                ('delivery_type', models.CharField(choices=[('economy', 'Economy'), ('express', 'Express')], default='economy', max_length=50)),
                ('delivery_method', models.CharField(max_length=50)),
                ('eway_bill_number', models.CharField(blank=True, max_length=50, null=True)),
                ('manual_date', models.DateField(blank=True, null=True)),
                ('manual_cnote_number', models.CharField(blank=True, max_length=50, null=True)),
                ('manual_cnote_type', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=50, null=True)),
                ('consignor_name', models.CharField(max_length=100)),
                ('consignor_mobile', models.CharField(max_length=15)),
                ('consignor_gst', models.CharField(blank=True, max_length=15, null=True)),
                ('consignor_address', models.TextField(blank=True, null=True)),
                ('consignee_name', models.CharField(max_length=100)),
                ('consignee_mobile', models.CharField(max_length=15)),
                ('consignee_gst', models.CharField(blank=True, max_length=15, null=True)),
                ('consignee_address', models.TextField(blank=True, null=True)),
                ('actual_weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('charged_weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('weight_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('weight_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fix_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('invoice_number', models.CharField(blank=True, max_length=255, null=True)),
                ('declared_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('risk_type', models.CharField(choices=[('owner', 'Owner'), ('carrier', 'Carrier')], max_length=50)),
                ('pod_required', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('freight', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('docket_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('door_delivery_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('handling_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('pickup_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('transhipment_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('insurance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fuel_surcharge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('other_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('carrier_risk', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('grand_total', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('booked', 'Booked'), ('dispatched', 'Dispatched'), ('received', 'Received'), ('due_for_delivery', 'Due for Delivery'), ('delivered', 'Delivered'), ('received_at_godown', 'Received at Godown'), ('cancelled', 'Cancelled')], default='booked', max_length=20)),
                ('status_updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('dealer_id', models.AutoField(primary_key=True, serialize=False)),
                ('dealer_code', models.CharField(default='4 DIGIT CODE', max_length=4, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('company_name', models.CharField(default='Unknown Company', max_length=100)),
                ('contact_person', models.CharField(default='Unknown Contact Person', max_length=100)),
                ('phone_number_1', models.CharField(max_length=15)),
                ('phone_number_2', models.CharField(blank=True, max_length=15, null=True)),
                ('mobile_number_1', models.CharField(max_length=15)),
                ('mobile_number_2', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gstn', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(default='Address not provided')),
                ('state', models.CharField(choices=[('MAHARASHTRA', 'Maharashtra'), ('DELHI', 'Delhi'), ('KARNATAKA', 'Karnataka'), ('TAMIL_NADU', 'Tamil Nadu'), ('WEST_BENGAL', 'West Bengal'), ('TELANGANA', 'Telangana'), ('GUJARAT', 'Gujarat')], default='MAHARASHTRA', max_length=100)),
                ('city', models.CharField(choices=[('MUMBAI', 'Mumbai'), ('DELHI', 'Delhi'), ('BANGALORE', 'Bangalore'), ('CHENNAI', 'Chennai'), ('KOLKATA', 'Kolkata'), ('HYDERABAD', 'Hyderabad'), ('PUNE', 'Pune'), ('AHMEDABAD', 'Ahmedabad')], default='MUMBAI', max_length=100)),
                ('branch_service_type', models.CharField(default='--SELECT--', max_length=100)),
                ('location_type', models.CharField(max_length=100)),
                ('pan_no', models.CharField(blank=True, max_length=10, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='dealer_photos/')),
                ('is_agent_branch', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('is_successful', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryDestination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination_name', models.CharField(max_length=100)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LoadingSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transporter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_dealer', models.BooleanField(default=False)),
                ('is_transporter', models.BooleanField(default=False)),
                ('dealer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_type', models.CharField(max_length=50)),
                ('art', models.IntegerField(blank=True, null=True)),
                ('said_to_contain', models.CharField(max_length=100)),
                ('art_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('art_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dealer_app.arttype')),
                ('cnote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='dealer_app.cnote')),
            ],
        ),
    ]
